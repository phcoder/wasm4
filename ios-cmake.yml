.libretro-ios-cmake:
  stage: build-shared
  tags:
   - macosx-packaging
  variables:
    LIBNAME: ${CORENAME}_libretro.dylib
    BUILD_DIR: build/ios-$ARCH
    CMAKE: cmake
    STRIP_CORE_LIB: 1
    IOS_MINVER: "8.0"
    CMAKE_SOURCE_ROOT: .
  before_script:
    - export NUMPROC=$(($(nproc)/5))
    - export IOSSDK=$(xcodebuild -version -sdk iphoneos Path)
  script:
    - ${CMAKE} $CORE_ARGS "$CMAKE_SOURCE_ROOT" -B$BUILD_DIR -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_FLAGS="-arch $ARCH -isysroot ${IOSSDK} -DIOS -miphoneos-version-min=${IOS_MINVER}" -DCMAKE_CXX_FLAGS="-arch $ARCH -isysroot ${IOSSDK} -DIOS -miphoneos-version-min=${IOS_MINVER}" -DIOS=ON  -DCMAKE_CROSSCOMPILING=1 -DCMAKE_SYSTEM_NAME=1 -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_SHARED_LIBRARY_SUFFIX=dylib
    - ${CMAKE} --build $BUILD_DIR --target ${CORENAME}_libretro --config Release -- -j $NUMPROC
    - mv $BUILD_DIR/$EXTRA_PATH/$LIBNAME $LIBNAME
    #- if [ $STRIP_CORE_LIB -eq 1 ]; then strip --strip-unneeded $LIBNAME; fi
  after_script:
    - otool -l "${LIBNAME}" | grep -A3 'LC_VERSION_MIN_IOS'
    - otool -l "${LIBNAME}" | grep -A5 'platform ios'
    - otool -L "${LIBNAME}" || true
  artifacts:
    paths:
      - $LIBNAME
    expire_in: 10 min
  dependencies: []

.libretro-ios-cmake-arm64:
  extends: .libretro-ios-cmake
  variables:
    ARCH: arm64
    CMAKE: cmake
